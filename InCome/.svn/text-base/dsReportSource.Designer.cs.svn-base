//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace InCome {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("dsReportSource")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsReportSource : System.Data.DataSet {
        
        private vwReportSourceDataTable tablevwReportSource;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsReportSource() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsReportSource(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["vwReportSource"] != null)) {
                    base.Tables.Add(new vwReportSourceDataTable(ds.Tables["vwReportSource"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vwReportSourceDataTable vwReportSource {
            get {
                return this.tablevwReportSource;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            dsReportSource cln = ((dsReportSource)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["vwReportSource"] != null)) {
                    base.Tables.Add(new vwReportSourceDataTable(ds.Tables["vwReportSource"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablevwReportSource = ((vwReportSourceDataTable)(base.Tables["vwReportSource"]));
            if ((initTable == true)) {
                if ((this.tablevwReportSource != null)) {
                    this.tablevwReportSource.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsReportSource";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/dsReportSource.xsd";
            this.Locale = new System.Globalization.CultureInfo("uk-UA");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablevwReportSource = new vwReportSourceDataTable();
            base.Tables.Add(this.tablevwReportSource);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevwReportSource() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            dsReportSource ds = new dsReportSource();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void vwReportSourceRowChangeEventHandler(object sender, vwReportSourceRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vwReportSourceDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMID;
            
            private System.Data.DataColumn columnFIO;
            
            private System.Data.DataColumn columnMDEPARTMENT;
            
            private System.Data.DataColumn columnMGROUP;
            
            private System.Data.DataColumn columnDATE;
            
            private System.Data.DataColumn columnINTIME;
            
            private System.Data.DataColumn columnOUTTIME;
            
            private System.Data.DataColumn columnHOURDUR;
            
            private System.Data.DataColumn columnDUR;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vwReportSourceDataTable() {
                this.TableName = "vwReportSource";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vwReportSourceDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vwReportSourceDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MIDColumn {
                get {
                    return this.columnMID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FIOColumn {
                get {
                    return this.columnFIO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MDEPARTMENTColumn {
                get {
                    return this.columnMDEPARTMENT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MGROUPColumn {
                get {
                    return this.columnMGROUP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INTIMEColumn {
                get {
                    return this.columnINTIME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OUTTIMEColumn {
                get {
                    return this.columnOUTTIME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HOURDURColumn {
                get {
                    return this.columnHOURDUR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DURColumn {
                get {
                    return this.columnDUR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vwReportSourceRow this[int index] {
                get {
                    return ((vwReportSourceRow)(this.Rows[index]));
                }
            }
            
            public event vwReportSourceRowChangeEventHandler vwReportSourceRowChanging;
            
            public event vwReportSourceRowChangeEventHandler vwReportSourceRowChanged;
            
            public event vwReportSourceRowChangeEventHandler vwReportSourceRowDeleting;
            
            public event vwReportSourceRowChangeEventHandler vwReportSourceRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvwReportSourceRow(vwReportSourceRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vwReportSourceRow AddvwReportSourceRow(int MID, string FIO, string MDEPARTMENT, string MGROUP, string DATE, string INTIME, string OUTTIME, decimal HOURDUR, string DUR) {
                vwReportSourceRow rowvwReportSourceRow = ((vwReportSourceRow)(this.NewRow()));
                rowvwReportSourceRow.ItemArray = new object[] {
                        MID,
                        FIO,
                        MDEPARTMENT,
                        MGROUP,
                        DATE,
                        INTIME,
                        OUTTIME,
                        HOURDUR,
                        DUR};
                this.Rows.Add(rowvwReportSourceRow);
                return rowvwReportSourceRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vwReportSourceDataTable cln = ((vwReportSourceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vwReportSourceDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMID = base.Columns["MID"];
                this.columnFIO = base.Columns["FIO"];
                this.columnMDEPARTMENT = base.Columns["MDEPARTMENT"];
                this.columnMGROUP = base.Columns["MGROUP"];
                this.columnDATE = base.Columns["DATE"];
                this.columnINTIME = base.Columns["INTIME"];
                this.columnOUTTIME = base.Columns["OUTTIME"];
                this.columnHOURDUR = base.Columns["HOURDUR"];
                this.columnDUR = base.Columns["DUR"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMID = new System.Data.DataColumn("MID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID);
                this.columnFIO = new System.Data.DataColumn("FIO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columnMDEPARTMENT = new System.Data.DataColumn("MDEPARTMENT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDEPARTMENT);
                this.columnMGROUP = new System.Data.DataColumn("MGROUP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMGROUP);
                this.columnDATE = new System.Data.DataColumn("DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnINTIME = new System.Data.DataColumn("INTIME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTIME);
                this.columnOUTTIME = new System.Data.DataColumn("OUTTIME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUTTIME);
                this.columnHOURDUR = new System.Data.DataColumn("HOURDUR", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOURDUR);
                this.columnDUR = new System.Data.DataColumn("DUR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUR);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vwReportSourceRow NewvwReportSourceRow() {
                return ((vwReportSourceRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vwReportSourceRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vwReportSourceRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vwReportSourceRowChanged != null)) {
                    this.vwReportSourceRowChanged(this, new vwReportSourceRowChangeEvent(((vwReportSourceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vwReportSourceRowChanging != null)) {
                    this.vwReportSourceRowChanging(this, new vwReportSourceRowChangeEvent(((vwReportSourceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vwReportSourceRowDeleted != null)) {
                    this.vwReportSourceRowDeleted(this, new vwReportSourceRowChangeEvent(((vwReportSourceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vwReportSourceRowDeleting != null)) {
                    this.vwReportSourceRowDeleting(this, new vwReportSourceRowChangeEvent(((vwReportSourceRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevwReportSourceRow(vwReportSourceRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsReportSource ds = new dsReportSource();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vwReportSourceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vwReportSourceRow : System.Data.DataRow {
            
            private vwReportSourceDataTable tablevwReportSource;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vwReportSourceRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevwReportSource = ((vwReportSourceDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MID {
                get {
                    try {
                        return ((int)(this[this.tablevwReportSource.MIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MID\' in table \'vwReportSource\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.MIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FIO {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.FIOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FIO\' in table \'vwReportSource\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.FIOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDEPARTMENT {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.MDEPARTMENTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MDEPARTMENT\' in table \'vwReportSource\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.MDEPARTMENTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MGROUP {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.MGROUPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MGROUP\' in table \'vwReportSource\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.MGROUPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATE {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DATE\' in table \'vwReportSource\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTIME {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.INTIMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'INTIME\' in table \'vwReportSource\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.INTIMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OUTTIME {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.OUTTIMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OUTTIME\' in table \'vwReportSource\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.OUTTIMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HOURDUR {
                get {
                    try {
                        return ((decimal)(this[this.tablevwReportSource.HOURDURColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HOURDUR\' in table \'vwReportSource\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.HOURDURColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DUR {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.DURColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DUR\' in table \'vwReportSource\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.DURColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIDNull() {
                return this.IsNull(this.tablevwReportSource.MIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIDNull() {
                this[this.tablevwReportSource.MIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIONull() {
                return this.IsNull(this.tablevwReportSource.FIOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIONull() {
                this[this.tablevwReportSource.FIOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDEPARTMENTNull() {
                return this.IsNull(this.tablevwReportSource.MDEPARTMENTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDEPARTMENTNull() {
                this[this.tablevwReportSource.MDEPARTMENTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMGROUPNull() {
                return this.IsNull(this.tablevwReportSource.MGROUPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMGROUPNull() {
                this[this.tablevwReportSource.MGROUPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATENull() {
                return this.IsNull(this.tablevwReportSource.DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATENull() {
                this[this.tablevwReportSource.DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTIMENull() {
                return this.IsNull(this.tablevwReportSource.INTIMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTIMENull() {
                this[this.tablevwReportSource.INTIMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOUTTIMENull() {
                return this.IsNull(this.tablevwReportSource.OUTTIMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOUTTIMENull() {
                this[this.tablevwReportSource.OUTTIMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOURDURNull() {
                return this.IsNull(this.tablevwReportSource.HOURDURColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOURDURNull() {
                this[this.tablevwReportSource.HOURDURColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDURNull() {
                return this.IsNull(this.tablevwReportSource.DURColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDURNull() {
                this[this.tablevwReportSource.DURColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vwReportSourceRowChangeEvent : System.EventArgs {
            
            private vwReportSourceRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vwReportSourceRowChangeEvent(vwReportSourceRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vwReportSourceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591
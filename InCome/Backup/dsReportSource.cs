//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace InCome {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsReportSource : DataSet {
        
        private vwReportSourceDataTable tablevwReportSource;
        
        public dsReportSource() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsReportSource(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["vwReportSource"] != null)) {
                    this.Tables.Add(new vwReportSourceDataTable(ds.Tables["vwReportSource"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vwReportSourceDataTable vwReportSource {
            get {
                return this.tablevwReportSource;
            }
        }
        
        public override DataSet Clone() {
            dsReportSource cln = ((dsReportSource)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["vwReportSource"] != null)) {
                this.Tables.Add(new vwReportSourceDataTable(ds.Tables["vwReportSource"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablevwReportSource = ((vwReportSourceDataTable)(this.Tables["vwReportSource"]));
            if ((this.tablevwReportSource != null)) {
                this.tablevwReportSource.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dsReportSource";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/dsReportSource.xsd";
            this.Locale = new System.Globalization.CultureInfo("uk-UA");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablevwReportSource = new vwReportSourceDataTable();
            this.Tables.Add(this.tablevwReportSource);
        }
        
        private bool ShouldSerializevwReportSource() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void vwReportSourceRowChangeEventHandler(object sender, vwReportSourceRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class vwReportSourceDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnMID;
            
            private DataColumn columnFIO;
            
            private DataColumn columnMDEPARTMENT;
            
            private DataColumn columnMGROUP;
            
            private DataColumn columnDATE;
            
            private DataColumn columnINTIME;
            
            private DataColumn columnOUTTIME;
            
            private DataColumn columnHOURDUR;
            
            private DataColumn columnDUR;
            
            internal vwReportSourceDataTable() : 
                    base("vwReportSource") {
                this.InitClass();
            }
            
            internal vwReportSourceDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn MIDColumn {
                get {
                    return this.columnMID;
                }
            }
            
            internal DataColumn FIOColumn {
                get {
                    return this.columnFIO;
                }
            }
            
            internal DataColumn MDEPARTMENTColumn {
                get {
                    return this.columnMDEPARTMENT;
                }
            }
            
            internal DataColumn MGROUPColumn {
                get {
                    return this.columnMGROUP;
                }
            }
            
            internal DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            internal DataColumn INTIMEColumn {
                get {
                    return this.columnINTIME;
                }
            }
            
            internal DataColumn OUTTIMEColumn {
                get {
                    return this.columnOUTTIME;
                }
            }
            
            internal DataColumn HOURDURColumn {
                get {
                    return this.columnHOURDUR;
                }
            }
            
            internal DataColumn DURColumn {
                get {
                    return this.columnDUR;
                }
            }
            
            public vwReportSourceRow this[int index] {
                get {
                    return ((vwReportSourceRow)(this.Rows[index]));
                }
            }
            
            public event vwReportSourceRowChangeEventHandler vwReportSourceRowChanged;
            
            public event vwReportSourceRowChangeEventHandler vwReportSourceRowChanging;
            
            public event vwReportSourceRowChangeEventHandler vwReportSourceRowDeleted;
            
            public event vwReportSourceRowChangeEventHandler vwReportSourceRowDeleting;
            
            public void AddvwReportSourceRow(vwReportSourceRow row) {
                this.Rows.Add(row);
            }
            
            public vwReportSourceRow AddvwReportSourceRow(int MID, string FIO, string MDEPARTMENT, string MGROUP, string DATE, string INTIME, string OUTTIME, System.Decimal HOURDUR, string DUR) {
                vwReportSourceRow rowvwReportSourceRow = ((vwReportSourceRow)(this.NewRow()));
                rowvwReportSourceRow.ItemArray = new object[] {
                        MID,
                        FIO,
                        MDEPARTMENT,
                        MGROUP,
                        DATE,
                        INTIME,
                        OUTTIME,
                        HOURDUR,
                        DUR};
                this.Rows.Add(rowvwReportSourceRow);
                return rowvwReportSourceRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                vwReportSourceDataTable cln = ((vwReportSourceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new vwReportSourceDataTable();
            }
            
            internal void InitVars() {
                this.columnMID = this.Columns["MID"];
                this.columnFIO = this.Columns["FIO"];
                this.columnMDEPARTMENT = this.Columns["MDEPARTMENT"];
                this.columnMGROUP = this.Columns["MGROUP"];
                this.columnDATE = this.Columns["DATE"];
                this.columnINTIME = this.Columns["INTIME"];
                this.columnOUTTIME = this.Columns["OUTTIME"];
                this.columnHOURDUR = this.Columns["HOURDUR"];
                this.columnDUR = this.Columns["DUR"];
            }
            
            private void InitClass() {
                this.columnMID = new DataColumn("MID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMID);
                this.columnFIO = new DataColumn("FIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFIO);
                this.columnMDEPARTMENT = new DataColumn("MDEPARTMENT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMDEPARTMENT);
                this.columnMGROUP = new DataColumn("MGROUP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMGROUP);
                this.columnDATE = new DataColumn("DATE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATE);
                this.columnINTIME = new DataColumn("INTIME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINTIME);
                this.columnOUTTIME = new DataColumn("OUTTIME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOUTTIME);
                this.columnHOURDUR = new DataColumn("HOURDUR", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHOURDUR);
                this.columnDUR = new DataColumn("DUR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDUR);
            }
            
            public vwReportSourceRow NewvwReportSourceRow() {
                return ((vwReportSourceRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new vwReportSourceRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(vwReportSourceRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vwReportSourceRowChanged != null)) {
                    this.vwReportSourceRowChanged(this, new vwReportSourceRowChangeEvent(((vwReportSourceRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vwReportSourceRowChanging != null)) {
                    this.vwReportSourceRowChanging(this, new vwReportSourceRowChangeEvent(((vwReportSourceRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vwReportSourceRowDeleted != null)) {
                    this.vwReportSourceRowDeleted(this, new vwReportSourceRowChangeEvent(((vwReportSourceRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vwReportSourceRowDeleting != null)) {
                    this.vwReportSourceRowDeleting(this, new vwReportSourceRowChangeEvent(((vwReportSourceRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovevwReportSourceRow(vwReportSourceRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class vwReportSourceRow : DataRow {
            
            private vwReportSourceDataTable tablevwReportSource;
            
            internal vwReportSourceRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablevwReportSource = ((vwReportSourceDataTable)(this.Table));
            }
            
            public int MID {
                get {
                    try {
                        return ((int)(this[this.tablevwReportSource.MIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.MIDColumn] = value;
                }
            }
            
            public string FIO {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.FIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.FIOColumn] = value;
                }
            }
            
            public string MDEPARTMENT {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.MDEPARTMENTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.MDEPARTMENTColumn] = value;
                }
            }
            
            public string MGROUP {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.MGROUPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.MGROUPColumn] = value;
                }
            }
            
            public string DATE {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.DATEColumn] = value;
                }
            }
            
            public string INTIME {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.INTIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.INTIMEColumn] = value;
                }
            }
            
            public string OUTTIME {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.OUTTIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.OUTTIMEColumn] = value;
                }
            }
            
            public System.Decimal HOURDUR {
                get {
                    try {
                        return ((System.Decimal)(this[this.tablevwReportSource.HOURDURColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.HOURDURColumn] = value;
                }
            }
            
            public string DUR {
                get {
                    try {
                        return ((string)(this[this.tablevwReportSource.DURColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwReportSource.DURColumn] = value;
                }
            }
            
            public bool IsMIDNull() {
                return this.IsNull(this.tablevwReportSource.MIDColumn);
            }
            
            public void SetMIDNull() {
                this[this.tablevwReportSource.MIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsFIONull() {
                return this.IsNull(this.tablevwReportSource.FIOColumn);
            }
            
            public void SetFIONull() {
                this[this.tablevwReportSource.FIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsMDEPARTMENTNull() {
                return this.IsNull(this.tablevwReportSource.MDEPARTMENTColumn);
            }
            
            public void SetMDEPARTMENTNull() {
                this[this.tablevwReportSource.MDEPARTMENTColumn] = System.Convert.DBNull;
            }
            
            public bool IsMGROUPNull() {
                return this.IsNull(this.tablevwReportSource.MGROUPColumn);
            }
            
            public void SetMGROUPNull() {
                this[this.tablevwReportSource.MGROUPColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATENull() {
                return this.IsNull(this.tablevwReportSource.DATEColumn);
            }
            
            public void SetDATENull() {
                this[this.tablevwReportSource.DATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsINTIMENull() {
                return this.IsNull(this.tablevwReportSource.INTIMEColumn);
            }
            
            public void SetINTIMENull() {
                this[this.tablevwReportSource.INTIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsOUTTIMENull() {
                return this.IsNull(this.tablevwReportSource.OUTTIMEColumn);
            }
            
            public void SetOUTTIMENull() {
                this[this.tablevwReportSource.OUTTIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsHOURDURNull() {
                return this.IsNull(this.tablevwReportSource.HOURDURColumn);
            }
            
            public void SetHOURDURNull() {
                this[this.tablevwReportSource.HOURDURColumn] = System.Convert.DBNull;
            }
            
            public bool IsDURNull() {
                return this.IsNull(this.tablevwReportSource.DURColumn);
            }
            
            public void SetDURNull() {
                this[this.tablevwReportSource.DURColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class vwReportSourceRowChangeEvent : EventArgs {
            
            private vwReportSourceRow eventRow;
            
            private DataRowAction eventAction;
            
            public vwReportSourceRowChangeEvent(vwReportSourceRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public vwReportSourceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
